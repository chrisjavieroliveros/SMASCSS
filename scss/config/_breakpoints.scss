/**
 * BREAKPOINTS CONFIGURATION
 * ------------------------
 */

// Breakpoint definitions
$breakpoints: (
  "xs": 375px,
  "sm": 576px,
  "md": 768px,
  "lg": 992px,
  "xl": 1200px,
  "xxl": 1400px,
);

// Function to get breakpoint value
@function breakpoint($name) {
  @if map-has-key($breakpoints, $name) {
    @return map-get($breakpoints, $name);
  }

  @error "Breakpoint '#{$name}' not found in breakpoints map.";
  @return null;
}

/**
 * Generate CSS breakpoint variables
 * Creates CSS custom properties for all breakpoint values
 * @example @include generate-breakpoint-variables();
 */
@mixin generate-breakpoint-variables() {
  :root {
    @each $name, $value in $breakpoints {
      --breakpoint-#{$name}: #{$value};
    }
  }
}

// Generate CSS variables
@include generate-breakpoint-variables();

/* 
* USAGE:
 * 1. Import the breakpoint tools:
 *    @use "tools/breakpoints" as breakpoints;
 * 
 * 2. Generate CSS variables in your root file:
 *    @include generate-breakpoint-variables();
 * 
 * 3. Mobile-First Approach Examples:
 *    a) Basic Responsive Element:
 *       .element {
 *         // Mobile styles (default)
 *         width: 100%;
 *         padding: 1rem;
 *         
 *         // Tablet and up (md)
 *         @include bp.breakpoint-up("md") {
 *           width: 50%;
 *           padding: 2rem;
 *         }
 *         
 *         // Desktop and up (lg)
 *         @include bp.breakpoint-up("lg") {
 *           width: 33.333%;
 *           padding: 3rem;
 *         }
 *       }
 * 
 *    b) Responsive Grid System:
 *       .grid {
 *         // Mobile: Single column
 *         display: grid;
 *         gap: 1rem;
 *         grid-template-columns: 1fr;
 *         
 *         // Tablet: Two columns
 *         @include bp.breakpoint-up("md") {
 *           grid-template-columns: repeat(2, 1fr);
 *         }
 *         
 *         // Desktop: Three columns
 *         @include bp.breakpoint-up("lg") {
 *           grid-template-columns: repeat(3, 1fr);
 *         }
 *         
 *         // Large Desktop: Four columns
 *         @include bp.breakpoint-up("xl") {
 *           grid-template-columns: repeat(4, 1fr);
 *         }
 *       }
 * 
 *    c) Responsive Navigation:
 *       .nav {
 *         // Mobile: Stacked menu
 *         display: flex;
 *         flex-direction: column;
 *         gap: 0.5rem;
 *         
 *         // Tablet and up: Horizontal menu
 *         @include bp.breakpoint-up("md") {
 *           flex-direction: row;
 *           gap: 1rem;
 *         }
 *       }
 * 
 *    d) Responsive Typography:
 *       .heading {
 *         // Mobile: Base size
 *         font-size: 1.5rem;
 *         line-height: 1.2;
 *         
 *         // Tablet: Medium size
 *         @include bp.breakpoint-up("md") {
 *           font-size: 2rem;
 *           line-height: 1.3;
 *         }
 *         
 *         // Desktop: Large size
 *         @include bp.breakpoint-up("lg") {
 *           font-size: 2.5rem;
 *           line-height: 1.4;
 *         }
 *       }
 * 
 * 4. Available Breakpoint Sizes (Mobile-First):
 *    - xs: 375px  (Extra small devices - Mobile)
 *    - sm: 576px  (Small devices - Large Mobile)
 *    - md: 768px  (Medium devices - Tablet)
 *    - lg: 992px  (Large devices - Desktop)
 *    - xl: 1200px (Extra large devices - Large Desktop)
 *    - xxl: 1400px (2X Extra large devices - Extra Large Desktop)
 * 
 * 5. Breakpoint Mixins:
 *    a) breakpoint-up($size) - Mobile-first (min-width)
 *       @include bp.breakpoint-up("md") { ... }
 * 
 *    b) breakpoint-down($size) - Desktop-first (max-width)
 *       @include bp.breakpoint-down("lg") { ... }
 * 
 *    c) breakpoint-only($size) - Specific breakpoint only
 *       @include bp.breakpoint-only("md") { ... }
 * 
 *    d) breakpoint-between($min, $max) - Between two breakpoints
 *       @include bp.breakpoint-between("sm", "lg") { ... }
 * 
 * 6. Best Practices:
 *    - Always start with mobile styles as the default
 *    - Use breakpoint-up() for progressive enhancement
 *    - Keep mobile styles outside of media queries
 *    - Use breakpoint-only() for specific device targeting
 *    - Use breakpoint-between() for custom ranges
 *    - Avoid using breakpoint-down() unless necessary
 * 
 * 7. Common Patterns:
 *    a) Mobile-First Container:
 *       .container {
 *         // Mobile: Full width with padding
 *         width: 100%;
 *         padding: 1rem;
 *         margin: 0 auto;
 *         
 *         // Tablet: Max width with larger padding
 *         @include bp.breakpoint-up("md") {
 *           max-width: 720px;
 *           padding: 2rem;
 *         }
 *         
 *         // Desktop: Larger max width
 *         @include bp.breakpoint-up("lg") {
 *           max-width: 960px;
 *         }
 *         
 *         // Large Desktop: Even larger max width
 *         @include bp.breakpoint-up("xl") {
 *           max-width: 1140px;
 *         }
 *       }
 * 
 *    b) Responsive Images:
 *       .responsive-image {
 *         // Mobile: Full width
 *         width: 100%;
 *         height: auto;
 *         
 *         // Tablet: Fixed height
 *         @include bp.breakpoint-up("md") {
 *           height: 300px;
 *           object-fit: cover;
 *         }
 *         
 *         // Desktop: Larger height
 *         @include bp.breakpoint-up("lg") {
 *           height: 400px;
 *         }
 *       }
 * 
 *    c) Responsive Spacing:
 *       .section {
 *         // Mobile: Compact spacing
 *         padding: 2rem 1rem;
 *         margin-bottom: 2rem;
 *         
 *         // Tablet: Medium spacing
 *         @include bp.breakpoint-up("md") {
 *           padding: 3rem 2rem;
 *           margin-bottom: 3rem;
 *         }
 *         
 *         // Desktop: Large spacing
 *         @include bp.breakpoint-up("lg") {
 *           padding: 4rem 3rem;
 *           margin-bottom: 4rem;
 *         }
 *       }
*/