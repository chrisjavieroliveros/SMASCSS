/**
 * Typography Configuration
 */

// Font families
$font-families: (
  "base": (
    "Inter",
    -apple-system,
    BlinkMacSystemFont,
    "Segoe UI",
    Roboto,
    "Helvetica Neue",
    Arial,
    sans-serif,
  ),
  "heading": (
    "Inter",
    -apple-system,
    BlinkMacSystemFont,
    "Segoe UI",
    Roboto,
    "Helvetica Neue",
    Arial,
    sans-serif,
  ),
  "mono": (
    "SFMono-Regular",
    Consolas,
    "Liberation Mono",
    Menlo,
    Monaco,
    monospace,
  ),
);

// Font weights
$font-weights: (
  "light": 300,
  "regular": 400,
  "medium": 500,
  "semibold": 600,
  "bold": 700,
);

// Font sizes
$font-sizes: (
  "xs": 0.75rem,
  // 12px
  "sm": 0.875rem,
  // 14px
  "base": 1rem,
  // 16px
  "lg": 1.125rem,
  // 18px
  "xl": 1.25rem,
  // 20px
  "2xl": 1.5rem,
  // 24px
  "3xl": 1.875rem,
  // 30px
  "4xl": 2.25rem,
  // 36px
  "5xl": 3rem,
  // 48px
);

// Line heights
$line-heights: (
  "none": 1,
  "tight": 1.25,
  "snug": 1.375,
  "normal": 1.5,
  "relaxed": 1.625,
  "loose": 2,
);

// Letter spacing
$letter-spacing: (
  "tight": -0.025em,
  "normal": 0,
  "wide": 0.025em,
  "wider": 0.05em,
  "widest": 0.1em,
);

// Functions to access typography values
@function font-family($name: "base") {
  @if map-has-key($font-families, $name) {
    @return map-get($font-families, $name);
  }
  @error "Font family '#{$name}' not found.";
  @return null;
}

@function font-weight($name: "regular") {
  @if map-has-key($font-weights, $name) {
    @return map-get($font-weights, $name);
  }
  @error "Font weight '#{$name}' not found.";
  @return null;
}

@function font-size($name: "base") {
  @if map-has-key($font-sizes, $name) {
    @return map-get($font-sizes, $name);
  }
  @error "Font size '#{$name}' not found.";
  @return null;
}

@function line-height($name: "normal") {
  @if map-has-key($line-heights, $name) {
    @return map-get($line-heights, $name);
  }
  @error "Line height '#{$name}' not found.";
  @return null;
}

@function letter-spacing($name: "normal") {
  @if map-has-key($letter-spacing, $name) {
    @return map-get($letter-spacing, $name);
  }
  @error "Letter spacing '#{$name}' not found.";
  @return null;
}

// Generate CSS typography variables
@mixin generate-typography-variables() {
  :root {
    @each $name, $value in $font-sizes {
      --font-size-#{$name}: #{$value};
    }

    @each $name, $value in $line-heights {
      --line-height-#{$name}: #{$value};
    }

    @each $name, $value in $letter-spacing {
      --letter-spacing-#{$name}: #{$value};
    }

    @each $name, $value in $font-weights {
      --font-weight-#{$name}: #{$value};
    }
  }
}
