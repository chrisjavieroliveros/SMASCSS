/**
 * Color System Configuration
 */

// Color palette
$colors: (
  "primary": #314459,
  "primary-tint": #4a637f,
  "primary-shade": #1f2c3a,
  "primary-contrast": #ffffff,
  "primary-50": #e6ebf1,
  "primary-100": #cdd7e3,
  "primary-200": #9fb3c8,
  "primary-300": #718fac,
  "primary-400": #4a637f,
  "primary-500": #314459,
  "primary-600": #28394b,
  "primary-700": #1f2c3a,
  "primary-800": #16202a,
  "primary-900": #0d141a,
  "primary-950": #070c10,

  "secondary": #2a8de9,
  "secondary-tint": #5eabef,
  "secondary-shade": #1971c2,
  "secondary-contrast": #ffffff,
  "secondary-50": #e3f2fd,
  "secondary-100": #bbdefb,
  "secondary-200": #90caf9,
  "secondary-300": #64b5f6,
  "secondary-400": #42a5f5,
  "secondary-500": #2a8de9,
  "secondary-600": #1e7bd6,
  "secondary-700": #1971c2,
  "secondary-800": #155fae,
  "secondary-900": #104b8a,
  "secondary-950": #0a2f5c,

  "danger": #e63946,
  "danger-tint": #f06a75,
  "danger-shade": #a52833,
  "danger-contrast": #ffffff,

  "warning": #ffb703,
  "warning-tint": #ffc733,
  "warning-shade": #cc9202,
  "warning-contrast": #000000,

  "success": #2a9d8f,
  "success-tint": #56b3a7,
  "success-shade": #1f7468,
  "success-contrast": #ffffff,

  "info": #219ebc,
  "info-tint": #4fb3d1,
  "info-shade": #197a91,
  "info-contrast": #ffffff,

  "light-50": #fefefe,
  "light-100": #fcfcfc,
  "light-200": #f9f9f9,
  "light-300": #f5f5f5,
  "light-400": #f0f0f0,
  "light-500": #ebebeb,
  "light-600": #d6d6d6,
  "light-700": #bfbfbf,
  "light-800": #a6a6a6,
  "light-900": #8c8c8c,
  "light-950": #737373,

  "dark-50": #e6e6e6,
  "dark-100": #cccccc,
  "dark-200": #b3b3b3,
  "dark-300": #999999,
  "dark-400": #808080,
  "dark-500": #666666,
  "dark-600": #4d4d4d,
  "dark-700": #333333,
  "dark-800": #1a1a1a,
  "dark-900": #0d0d0d,
  "dark-950": #050505,

  "black": #272727,
  "white": #ffffff,
);

// Function to get color
@function color($name) {
  @if map-has-key($colors, $name) {
    @return map-get($colors, $name);
  }
  @error "Color '#{$name}' not found in color map.";
  @return null;
}

// Function to get color with opacity
@function color-alpha($name, $alpha) {
  $color: color($name);
  @return rgba($color, $alpha);
}

// Generate CSS variables
@mixin generate-color-variables() {
  :root {
    @each $name, $value in $colors {
      --color-#{$name}: #{$value};
    }
  }
}
