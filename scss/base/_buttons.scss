@use "../abstracts/colors" as colors;
@use "../abstracts/spacing" as spacing;
@use "../abstracts/fonts" as fonts;
@use "../abstracts/responsive" as responsive;

/* Button Base Styles
-------------------------------------------------- */
.btn {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: spacing.spacing("3") spacing.spacing("5");
  border-radius: 0.375rem;
  font-family: fonts.$font-family-base;
  font-weight: fonts.$font-weight-medium;
  font-size: fonts.$font-size-base;
  line-height: 1.5;
  text-decoration: none;
  text-align: center;
  vertical-align: middle;
  cursor: pointer;
  user-select: none;
  border: 1px solid transparent;
  transition: all 0.2s ease-in-out;
  white-space: nowrap;

  // Focus handling
  &:focus-visible {
    outline: 2px solid colors.getColor(Primary);
    outline-offset: 2px;
  }

  // Icon handling
  .icon {
    width: 1.25em;
    height: 1.25em;

    &:first-child:not(:last-child) {
      margin-right: spacing.spacing("2");
    }

    &:last-child:not(:first-child) {
      margin-left: spacing.spacing("2");
    }
  }
}

/* Button Size Variants
-------------------------------------------------- */
.btn--sm {
  padding: spacing.spacing("2") spacing.spacing("4");
  font-size: fonts.$font-size-sm;
}

.btn--lg {
  padding: spacing.spacing("4") spacing.spacing("6");
  font-size: fonts.$font-size-lg;
}

/* Button Color Variants
-------------------------------------------------- */

// Primary Button
.btn--primary {
  background-color: colors.getColor(Primary);
  color: colors.getColor(Primary-Contrast);
  border-color: colors.getColor(Primary);

  &:hover {
    background-color: colors.getColor(Primary-Shade);
    border-color: colors.getColor(Primary-Shade);
  }

  &:active {
    background-color: darken(colors.getColor(Primary-Shade), 5%);
  }
}

// Secondary Button
.btn--secondary {
  background-color: colors.getColor(Secondary);
  color: colors.getColor(Secondary-Contrast);
  border-color: colors.getColor(Secondary);

  &:hover {
    background-color: colors.getColor(Secondary-Shade);
    border-color: colors.getColor(Secondary-Shade);
  }

  &:active {
    background-color: darken(colors.getColor(Secondary-Shade), 5%);
  }
}

// Tertiary Button
.btn--tertiary {
  background-color: colors.getColor(Tertiary);
  color: colors.getColor(Tertiary-Contrast);
  border-color: colors.getColor(Tertiary);

  &:hover {
    background-color: colors.getColor(Tertiary-Shade);
    border-color: colors.getColor(Tertiary-Shade);
  }

  &:active {
    background-color: darken(colors.getColor(Tertiary-Shade), 5%);
  }
}

/* Status Button Variants
-------------------------------------------------- */

// Success Button
.btn--success {
  background-color: colors.getColor(Success);
  color: colors.getColor(White);
  border-color: colors.getColor(Success);

  &:hover {
    background-color: darken(colors.getColor(Success), 7%);
    border-color: darken(colors.getColor(Success), 7%);
  }

  &:active {
    background-color: darken(colors.getColor(Success), 10%);
  }
}

// Danger Button
.btn--danger {
  background-color: colors.getColor(Danger);
  color: colors.getColor(White);
  border-color: colors.getColor(Danger);

  &:hover {
    background-color: darken(colors.getColor(Danger), 7%);
    border-color: darken(colors.getColor(Danger), 7%);
  }

  &:active {
    background-color: darken(colors.getColor(Danger), 10%);
  }
}

// Warning Button
.btn--warning {
  background-color: colors.getColor(Warning);
  color: colors.getColor(Black);
  border-color: colors.getColor(Warning);

  &:hover {
    background-color: darken(colors.getColor(Warning), 7%);
    border-color: darken(colors.getColor(Warning), 7%);
  }

  &:active {
    background-color: darken(colors.getColor(Warning), 10%);
  }
}

// Info Button
.btn--info {
  background-color: colors.getColor(Info);
  color: colors.getColor(White);
  border-color: colors.getColor(Info);

  &:hover {
    background-color: darken(colors.getColor(Info), 7%);
    border-color: darken(colors.getColor(Info), 7%);
  }

  &:active {
    background-color: darken(colors.getColor(Info), 10%);
  }
}

/* Outline Button Variants
-------------------------------------------------- */

// Primary Outline
.btn--outline-primary {
  background-color: transparent;
  color: colors.getColor(Primary);
  border-color: colors.getColor(Primary);

  &:hover {
    background-color: colors.getColor(Primary);
    color: colors.getColor(Primary-Contrast);
  }
}

// Secondary Outline
.btn--outline-secondary {
  background-color: transparent;
  color: colors.getColor(Secondary);
  border-color: colors.getColor(Secondary);

  &:hover {
    background-color: colors.getColor(Secondary);
    color: colors.getColor(Secondary-Contrast);
  }
}

// Tertiary Outline
.btn--outline-tertiary {
  background-color: transparent;
  color: colors.getColor(Tertiary);
  border-color: colors.getColor(Tertiary);

  &:hover {
    background-color: colors.getColor(Tertiary);
    color: colors.getColor(Tertiary-Contrast);
  }
}

// Success Outline
.btn--outline-success {
  background-color: transparent;
  color: colors.getColor(Success);
  border-color: colors.getColor(Success);

  &:hover {
    background-color: colors.getColor(Success);
    color: colors.getColor(White);
  }
}

// Danger Outline
.btn--outline-danger {
  background-color: transparent;
  color: colors.getColor(Danger);
  border-color: colors.getColor(Danger);

  &:hover {
    background-color: colors.getColor(Danger);
    color: colors.getColor(White);
  }
}

// Warning Outline
.btn--outline-warning {
  background-color: transparent;
  color: colors.getColor(Warning);
  border-color: colors.getColor(Warning);

  &:hover {
    background-color: colors.getColor(Warning);
    color: colors.getColor(Black);
  }
}

// Info Outline
.btn--outline-info {
  background-color: transparent;
  color: colors.getColor(Info);
  border-color: colors.getColor(Info);

  &:hover {
    background-color: colors.getColor(Info);
    color: colors.getColor(White);
  }
}

/* Button States
-------------------------------------------------- */

// Disabled button state
.btn:disabled,
.btn--disabled {
  opacity: 0.65;
  pointer-events: none;
  cursor: not-allowed;
}

// Full width button
.btn--block {
  display: block;
  width: 100%;
}

/* Button Groups
-------------------------------------------------- */
.btn-group {
  display: inline-flex;

  .btn {
    border-radius: 0;

    &:not(:last-child) {
      border-right-width: 0;
    }

    &:first-child {
      border-top-left-radius: 0.375rem;
      border-bottom-left-radius: 0.375rem;
    }

    &:last-child {
      border-top-right-radius: 0.375rem;
      border-bottom-right-radius: 0.375rem;
    }
  }
}

/* Icon Only Buttons
-------------------------------------------------- */
.btn--icon {
  padding: spacing.spacing("3");
  border-radius: 50%;

  &.btn--sm {
    padding: spacing.spacing("2");
  }

  &.btn--lg {
    padding: spacing.spacing("4");
  }

  .icon {
    margin: 0;
  }
}

/* *
Sample Usage:

<button class="btn btn--primary">Primary Button</button>
<button class="btn btn--outline-secondary btn--sm">Small Secondary Outline</button>
<button class="btn btn--success btn--lg">Large Success Button</button>
<button class="btn btn--danger btn--block">Full Width Danger Button</button>

<!-- Buttons with icons -->
<button class="btn btn--primary">
  <svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
    <path d="M15 3h4a2 2 0 0 1 2 2v14a2 2 0 0 1-2 2h-4M10 17l5-5-5-5M13 12H3"></path>
  </svg>
  Sign In
</button>

<button class="btn btn--secondary">
  Download
  <svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
    <path d="M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4M7 10l5 5 5-5M12 15V3"></path>
  </svg>
</button>

<!-- Icon-only button -->
<button class="btn btn--icon btn--primary">
  <svg class="icon" xmlns="http://www.w3.org/2000/svg" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
    <circle cx="12" cy="12" r="10"></circle>
    <line x1="12" y1="8" x2="12" y2="16"></line>
    <line x1="8" y1="12" x2="16" y2="12"></line>
  </svg>
</button>

<!-- Button group -->
<div class="btn-group">
  <button class="btn btn--outline-primary">Left</button>
  <button class="btn btn--outline-primary">Middle</button>
  <button class="btn btn--outline-primary">Right</button>
</div>

* */
