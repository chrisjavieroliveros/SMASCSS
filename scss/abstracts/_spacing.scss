@use "sass:map";

// Base unit for spacing calculations (in rem for accessibility)
$base-unit: 0.25rem !default; // 4px at default browser font size

// Core spacing scale
$space-0: 0 !default;
$space-1: $base-unit !default; // 0.25rem / 4px
$space-2: $base-unit * 2 !default; // 0.5rem / 8px
$space-3: $base-unit * 3 !default; // 0.75rem / 12px
$space-4: $base-unit * 4 !default; // 1rem / 16px
$space-5: $base-unit * 6 !default; // 1.5rem / 24px
$space-6: $base-unit * 8 !default; // 2rem / 32px
$space-7: $base-unit * 12 !default; // 3rem / 48px
$space-8: $base-unit * 16 !default; // 4rem / 64px
$space-9: $base-unit * 24 !default; // 6rem / 96px
$space-10: $base-unit * 32 !default; // 8rem / 128px

// Named spacing variables for semantic usage
$spacing-xs: $space-1 !default;
$spacing-sm: $space-2 !default;
$spacing-md: $space-4 !default;
$spacing-lg: $space-6 !default;
$spacing-xl: $space-8 !default;
$spacing-2xl: $space-10 !default;

// Container padding at different breakpoints
$container-padding-sm: $space-4 !default; // 1rem / 16px
$container-padding-md: $space-5 !default; // 1.5rem / 24px
$container-padding-lg: $space-6 !default; // 2rem / 32px

// Section spacing
$section-spacing-sm: $space-6 !default; // 2rem / 32px
$section-spacing-md: $space-8 !default; // 4rem / 64px
$section-spacing-lg: $space-10 !default; // 8rem / 128px

// Component spacing
$component-padding-sm: $space-3 !default; // 0.75rem / 12px
$component-padding-md: $space-4 !default; // 1rem / 16px
$component-padding-lg: $space-5 !default; // 1.5rem / 24px

// Gap spacing for grid and flex layouts
$gap-xs: $space-2 !default;
$gap-sm: $space-3 !default;
$gap-md: $space-4 !default;
$gap-lg: $space-6 !default;
$gap-xl: $space-8 !default;

// Map for programmatically accessing spacing values
$spacing-map: (
  "0": $space-0,
  "1": $space-1,
  "2": $space-2,
  "3": $space-3,
  "4": $space-4,
  "5": $space-5,
  "6": $space-6,
  "7": $space-7,
  "8": $space-8,
  "9": $space-9,
  "10": $space-10,
  "xs": $spacing-xs,
  "sm": $spacing-sm,
  "md": $spacing-md,
  "lg": $spacing-lg,
  "xl": $spacing-xl,
  "2xl": $spacing-2xl,
) !default;

// Function to get spacing value
@function spacing($key) {
  @if map.has-key($spacing-map, $key) {
    @return map.get($spacing-map, $key);
  } @else {
    @error "Spacing '#{$key}' not found in spacing map.";
    @return null;
  }
}

/* 
Usage example:

// Basic usage with the spacing function
.element {
  margin: spacing(4);               // 1rem
  padding: spacing('md');           // 1rem (semantic naming)
  gap: spacing('lg');               // 2rem
}

// Directional spacing
.card {
  margin-top: spacing(5);           // 1.5rem
  margin-bottom: spacing('md');     // 1rem
  padding-left: spacing('sm');      // 0.5rem
  padding-right: spacing('sm');     // 0.5rem
}

// Responsive container padding
.container {
  padding: $container-padding-sm;   // 1rem on small screens
  
  @media (min-width: 768px) {
    padding: $container-padding-md; // 1.5rem on medium screens
  }
  
  @media (min-width: 1024px) {
    padding: $container-padding-lg; // 2rem on large screens
  }
}

// Section spacing
.section {
  margin-bottom: $section-spacing-sm; // 2rem default
  
  @media (min-width: 768px) {
    margin-bottom: $section-spacing-md; // 4rem on medium screens
  }
  
  @media (min-width: 1024px) {
    margin-bottom: $section-spacing-lg; // 8rem on large screens
  }
}

// Grid system with gaps
.grid {
  display: grid;
  grid-template-columns: repeat(auto-fill, minmax(250px, 1fr));
  gap: $gap-md;                     // 1rem gap
  
  @media (min-width: 768px) {
    gap: $gap-lg;                   // 2rem gap on larger screens
  }
}

// Flexbox with spacing
.flex-container {
  display: flex;
  flex-wrap: wrap;
  gap: $gap-sm;                     // 0.75rem gap
  
  > * {
    margin-bottom: spacing(4);      // 1rem bottom margin on children
    padding: spacing(3);            // 0.75rem padding on children
  }
}

// Using multiple spacing values together
.complex-element {
  padding: spacing(3) spacing(5);   // 0.75rem vertical, 1.5rem horizontal
  margin: spacing(4) auto;          // 1rem vertical, auto horizontal
  gap: spacing(2);                  // 0.5rem gap
}

// Component spacing examples
.card {
  padding: $component-padding-sm;   // 0.75rem padding
  margin-bottom: spacing(4);        // 1rem bottom margin
  
  .card-header {
    padding-bottom: spacing('xs');  // 0.25rem bottom padding
    margin-bottom: spacing('sm');   // 0.5rem bottom margin
  }
  
  .card-body {
    padding: spacing('md') 0;       // 1rem vertical padding
  }
}
*/
