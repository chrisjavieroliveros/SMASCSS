// Color palette map
$colors: (
  // Colors
  Primary: #c2171c,
  Secondary: #2ba731,
  Tertiary: #f7f7f7,
  Quaternary: #f0f0f0,

  // Status
  Danger: #f43f5e,
  Warning: #f59e0b,
  Success: #10b981,
  Info: #3b82f6,

  // Neutrals
  Black: #272727,
  White: #ffffff,

  // Light
  Light-100: #fafafa,
  Light-200: #f5f5f5,
  Light-300: #ebebeb,
  Light-400: #e0e0e0,
  Light-500: #d6d6d6,
  Light-600: #cccccc,
  Light-700: #c2c2c2,
  Light-800: #b8b8b8,
  Light-900: #adadad,

  // Dark
  Dark-100: #a1a1a1,
  Dark-200: #8e8e8e,
  Dark-300: #7c7c7c,
  Dark-400: #6a6a6a,
  Dark-500: #585858,
  Dark-600: #464646,
  Dark-700: #343434,
  Dark-800: #222222,
  Dark-900: #101010
) !default;

// Function to get color from the map
@function getColor($color-name) {
  @if map-has-key($colors, $color-name) {
    @return map-get($colors, $color-name);
  } @else {
    @error "Color '#{$color-name}' not found in the colors map.";
    @return null;
  }
}

// Function to get color with opacity
@function getColorWithOpacity($color-name, $opacity) {
  $color: getColor($color-name);
  @return rgba($color, $opacity);
}

// Generate CSS Variables based on the colors map
@mixin generate-color-variables() {
  @each $colorName, $color in $colors {
    --color-#{'' + $colorName}: #{$color};
  }
}

// Root color variables for light/dark themes
@mixin theme-variables($theme: "light") {
  @if $theme == "light" {
    // Light theme variables
    --background-primary: #{getColor(White)}; // Remove quotes
    --background-secondary: #{getColor(Light-100)};
    --background-tertiary: #{getColor(Light-200)};

    --text-primary: #{getColor(Black)};
    --text-secondary: #{getColor(Dark-600)};
    --text-muted: #{getColor(Dark-400)};

    --border-color: #{getColor(Light-400)};
    --border-color-focus: #{getColor(Primary)};

    --link-color: #{getColor(Primary)};
    --link-hover-color: #{getColorWithOpacity(Primary, 0.8)};
  } @else {
    // Dark theme variables
    --background-primary: #{getColor(Dark-800)};
    --background-secondary: #{getColor(Dark-700)};
    --background-tertiary: #{getColor(Dark-600)};

    --text-primary: #{getColor(Light-100)};
    --text-secondary: #{getColor(Light-300)};
    --text-muted: #{getColor(Light-500)};

    --border-color: #{getColor(Dark-500)};
    --border-color-focus: #{getColor(Primary)};

    --link-color: #{getColorWithOpacity(Primary, 0.9)};
    --link-hover-color: #{getColor(Primary)};
  }
}
