@use "../../mixins/_index" as mixins;

/**
 * GRID LAYOUT CONFIGURATION
 * -----------------------
 * 
 * Mobile-first responsive grid layout implementation
 * 
 * USAGE:
 * 1. Apply the grid class to create a responsive grid layout:
 *    <div class="grid">
 *      <div>Item 1</div>
 *      <div>Item 2</div>
 *    </div>
 * 
 * 2. Column variations (mobile-first responsive):
 *    - Two columns: <div class="grid grid--2-col">...</div>
 *      Mobile: 1 column, Tablet/Desktop: 2 columns
 *    
 *    - Three columns: <div class="grid grid--3-col">...</div>
 *      Mobile: 1 column, Tablet: 2 columns, Desktop: 3 columns
 *    
 *    - Four columns: <div class="grid grid--4-col">...</div>
 *      Mobile: 1 column, Tablet: 2 columns, Desktop: 4 columns
 * 
 * 3. Gap variations:
 *    - Default: <div class="grid">...</div> (gap: spacing("4"))
 *    - Small: <div class="grid grid--gap-sm">...</div> (gap: spacing("2"))
 *    - Large: <div class="grid grid--gap-lg">...</div> (gap: spacing("8"))
 * 
 * 4. Auto-fit grid (for card layouts):
 *    <div class="grid grid--auto-fit">...</div>
 *    Creates a responsive grid that automatically fits columns based on available space
 */

.grid {
  display: grid;
  gap: var(--spacing-4);

  // Gap variants
  &--gap-sm {
    gap: var(--spacing-2);
  }

  &--gap-lg {
    gap: var(--spacing-8);
  }

  // Mobile-first responsive grid templates
  &--2-col {
    // Mobile: 1 column (default)
    grid-template-columns: 1fr;

    // Tablet and up: 2 columns
    @include mixins.breakpoint-up("md") {
      grid-template-columns: repeat(2, 1fr);
    }
  }

  &--3-col {
    // Mobile: 1 column (default)
    grid-template-columns: 1fr;

    // Tablet: 2 columns
    @include mixins.breakpoint-up("md") {
      grid-template-columns: repeat(2, 1fr);
    }

    // Desktop and up: 3 columns
    @include mixins.breakpoint-up("lg") {
      grid-template-columns: repeat(3, 1fr);
    }
  }

  &--4-col {
    // Mobile: 1 column (default)
    grid-template-columns: 1fr;

    // Small tablet: 2 columns
    @include mixins.breakpoint-up("sm") {
      grid-template-columns: repeat(2, 1fr);
    }

    // Desktop and up: 4 columns
    @include mixins.breakpoint-up("lg") {
      grid-template-columns: repeat(4, 1fr);
    }
  }

  // Auto-fit grid for cards (mobile-first)
  &--auto-fit {
    // Mobile: Single column with minimum width
    grid-template-columns: 1fr;

    // Small screens and up: Auto-fit with minimum card width
    @include mixins.breakpoint-up("sm") {
      grid-template-columns: repeat(auto-fit, minmax(min(100%, 18rem), 1fr));
    }
  }
}
