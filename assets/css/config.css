/**
 * CONFIG
 * ======
 * 
 * This file imports all configuration modules and generates CSS variables
 * for the SCSS system. This is your main configuration entry point that 
 * can be easily swapped between different websites/projects.
 * 
 * USAGE:
 * - Import this file to get all configuration variables and CSS custom properties
 * - Modify the individual config files (_colors.scss, _typography.scss, etc.)
 *   to customize the appearance for each website
 * 
 * Author: Chris Javier Oliveros
 */
/**
 * COLOR CONFIGURATION
 * ------------------
 * 
 * USAGE:
 * 1. Import this file: @import 'config/colors';
 * 
 * 2. Generate CSS variables in your root file:
 *    @include generate-color-variables();
 * 
 * 3. Use colors in your SCSS:
 *    - Function: color: color('primary');      // Returns #314459
 *    - Function: border: 1px solid color('primary-300');  // Uses shade variant
 *    - Variable: background: var(--color-primary);  // Use CSS variable
 *    - Opacity: background: color-alpha('primary', 0.5);  // 50% opacity
 * 
 * 4. For theme variations:
 *    .dark-theme { background: var(--color-dark-800); }
 */
/**
 * Function to get color value
 * @param {String} $name - The color name from the $colors map
 * @return {Color} The color value
 * @example color: color('primary');      // Returns #314459
 */
/**
 * Function to get color with opacity
 * @param {String} $name - The color name from the $colors map
 * @param {Number} $alpha - Opacity value between 0 and 1
 * @return {Color} The rgba color value with opacity
 * @example background: color-alpha('primary', 0.5); // Returns rgba(49, 68, 89, 0.5)
 */
/**
 * Generate CSS color variables
 * Creates CSS custom properties for all colors in the $colors map
 * @example @include generate-color-variables();
 */
/**
 * TYPOGRAPHY CONFIGURATION
 * -----------------------
 * 
 * USAGE:
 * 1. Import this file: @import 'config/typography';
 * 
 * 2. Generate CSS variables in your root file:
 *    @include generate-typography-variables();
 * 
 * 3. Use typography in your SCSS:
 *    - Font family: font-family: font-family('heading');  // Returns 'Inter', -apple-system, etc.
 *    - Font weight: font-weight: font-weight('bold');     // Returns 700
 *    - Font size: font-size: font-size('lg');            // Returns 1.125rem
 *    - Line height: line-height: line-height('tight');   // Returns 1.25
 *    - Letter spacing: letter-spacing: letter-spacing('wide');  // Returns 0.025em
 *    - Variable: font-size: var(--font-size-xl);         // Use CSS variable
 * 
 * 4. For component patterns:
 *    .heading-1 { 
 *      font-family: font-family('heading');
 *      font-size: font-size('5xl');
 *      font-weight: font-weight('bold');
 *      line-height: line-height('tight');
 *    }
 */
/**
 * Typography Configuration
 */
/**
 * Function to get font family
 * @param {String} $name - The font family name from the $font-families map
 * @return {List} The list of font family values
 * @example font-family: font-family('heading'); // Returns 'Inter', -apple-system, etc.
 */
/**
 * Function to get font weight
 * @param {String} $name - The font weight name from the $font-weights map
 * @return {Number} The font weight value
 * @example font-weight: font-weight('bold'); // Returns 700
 */
/**
 * Function to get font size
 * @param {String} $name - The font size name from the $font-sizes map
 * @return {Length} The font size value in rem
 * @example font-size: font-size('lg'); // Returns 1.125rem
 */
/**
 * Function to get line height
 * @param {String} $name - The line height name from the $line-heights map
 * @return {Number} The line height value
 * @example line-height: line-height('tight'); // Returns 1.25
 */
/**
 * Function to get letter spacing
 * @param {String} $name - The letter spacing name from the $letter-spacing map
 * @return {Length} The letter spacing value in em
 * @example letter-spacing: letter-spacing('wide'); // Returns 0.025em
 */
/**
 * Generate CSS typography variables
 * Creates CSS custom properties for all typography settings
 * @example @include generate-typography-variables();
 */
/**
 * SPACING CONFIGURATION
 * ---------------------
 * 
 * USAGE:
 * 1. Import this file: @import 'config/spacing';
 * 
 * 2. Generate CSS variables in your root file:
 *    @include generate-spacing-variables();
 * 
 * 3. Use spacing in your SCSS:
 *    - Function: margin: spacing(4);      // Returns 1rem
 *    - Function: padding: spacing('md');  // Returns 2rem using alias
 *    - Variable: gap: var(--spacing-6);   // Use CSS variable
 * 
 * 4. For container padding:
 *    padding: var(--container-padding-md); // Responsive padding
 */
/**
 * Function to get spacing value
 * @param {String|Number} $key - The spacing key or alias
 * @return {Number} The spacing value in rem
 * @example padding: spacing(4);      // Returns 1rem
 * @example margin: spacing('sm');    // Returns 1rem via alias
 */
/**
 * Generate CSS spacing variables
 * Creates CSS custom properties for all spacing values
 * @example @include generate-spacing-variables();
 */
/**
 * BREAKPOINTS CONFIGURATION
 * ------------------------
 * 
 * USAGE:
 * 1. Import this file: @import 'config/breakpoints';
 * 
 * 2. Generate CSS variables in your root file:
 *    @include generate-breakpoint-variables();
 * 
 * 3. Use breakpoints in your SCSS:
 *    - Mixin:    @include breakpoint(md) { ... }     // Applies styles at 768px and above
 *    - Function: width: breakpoint(lg);              // Returns 992px
 *    - Variable: @media (min-width: var(--breakpoint-xl)) { ... }  // Use CSS variable
 * 
 * 4. Available breakpoint sizes:
 *    - xs: 375px
 *    - sm: 576px
 *    - md: 768px
 *    - lg: 992px
 *    - xl: 1200px
 *    - xxl: 1400px
 */
/**
 * Generate CSS breakpoint variables
 * Creates CSS custom properties for all breakpoint values
 * @example @include generate-breakpoint-variables();
 */
/**
 * Button Configuration
 */
/**
 * Generate CSS button variables
 * Creates CSS custom properties for all button configurations
 * @example @include generate-button-variables();
 */
/**
 * Global Utility Functions
 * 
 * Note: All utility functions have been moved to scss/tools/_functions.scss
 * Use @use "../tools/functions" as functions; and call functions like:
 * $rem-value: functions.px-to-rem(16px);
 */
/**
 * CONFIG
 * ======
 * 
 * This file imports all configuration modules and generates CSS variables
 * for the SCSS system. This is your main configuration entry point that 
 * can be easily swapped between different websites/projects.
 * 
 * USAGE:
 * - Import this file to get all configuration variables and CSS custom properties
 * - Modify the individual config files (_colors.scss, _typography.scss, etc.)
 *   to customize the appearance for each website
 * 
 * Author: Chris Javier Oliveros
 */
:root {
  --color-primary: #314459;
  --color-primary-tint: #4a637f;
  --color-primary-shade: #1f2c3a;
  --color-primary-contrast: #ffffff;
  --color-primary-50: #e6ebf1;
  --color-primary-100: #cdd7e3;
  --color-primary-200: #9fb3c8;
  --color-primary-300: #718fac;
  --color-primary-400: #4a637f;
  --color-primary-500: #314459;
  --color-primary-600: #28394b;
  --color-primary-700: #1f2c3a;
  --color-primary-800: #16202a;
  --color-primary-900: #0d141a;
  --color-primary-950: #070c10;
  --color-secondary: #2a8de9;
  --color-secondary-tint: #5eabef;
  --color-secondary-shade: #1971c2;
  --color-secondary-contrast: #ffffff;
  --color-secondary-50: #e3f2fd;
  --color-secondary-100: #bbdefb;
  --color-secondary-200: #90caf9;
  --color-secondary-300: #64b5f6;
  --color-secondary-400: #42a5f5;
  --color-secondary-500: #2a8de9;
  --color-secondary-600: #1e7bd6;
  --color-secondary-700: #1971c2;
  --color-secondary-800: #155fae;
  --color-secondary-900: #104b8a;
  --color-secondary-950: #0a2f5c;
  --color-danger: #e63946;
  --color-danger-tint: #f06a75;
  --color-danger-shade: #a52833;
  --color-danger-contrast: #ffffff;
  --color-warning: #ffb703;
  --color-warning-tint: #ffc733;
  --color-warning-shade: #cc9202;
  --color-warning-contrast: #000000;
  --color-success: #2a9d8f;
  --color-success-tint: #56b3a7;
  --color-success-shade: #1f7468;
  --color-success-contrast: #ffffff;
  --color-info: #219ebc;
  --color-info-tint: #4fb3d1;
  --color-info-shade: #197a91;
  --color-info-contrast: #ffffff;
  --color-light-50: #fefefe;
  --color-light-100: #fafafa;
  --color-light-200: #f5f5f5;
  --color-light-300: #ebebeb;
  --color-light-400: #e0e0e0;
  --color-light-500: #d6d6d6;
  --color-light-600: #cccccc;
  --color-light-700: #c2c2c2;
  --color-light-800: #b8b8b8;
  --color-light-900: #adadad;
  --color-light-950: #a3a3a3;
  --color-dark-50: #ababab;
  --color-dark-100: #a1a1a1;
  --color-dark-200: #8e8e8e;
  --color-dark-300: #7c7c7c;
  --color-dark-400: #6a6a6a;
  --color-dark-500: #585858;
  --color-dark-600: #464646;
  --color-dark-700: #343434;
  --color-dark-800: #222222;
  --color-dark-900: #101010;
  --color-dark-950: #050505;
  --color-black: #272727;
  --color-white: #ffffff;
}

:root {
  --font-family-base: Inter, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, sans-serif;
  --font-family-heading: Inter, -apple-system, BlinkMacSystemFont, Segoe UI, Roboto, Helvetica Neue, Arial, sans-serif;
  --font-family-mono: SFMono-Regular, Consolas, Liberation Mono, Menlo, Monaco, monospace;
  --font-size-xs: 0.75rem;
  --font-size-sm: 0.875rem;
  --font-size-base: 1rem;
  --font-size-lg: 1.125rem;
  --font-size-xl: 1.25rem;
  --font-size-2xl: 1.5rem;
  --font-size-3xl: 1.875rem;
  --font-size-4xl: 2.25rem;
  --font-size-5xl: 3rem;
  --line-height-none: 1;
  --line-height-tight: 1.25;
  --line-height-snug: 1.375;
  --line-height-normal: 1.5;
  --line-height-relaxed: 1.625;
  --line-height-loose: 2;
  --letter-spacing-tight: -0.025em;
  --letter-spacing-normal: 0;
  --letter-spacing-wide: 0.025em;
  --letter-spacing-wider: 0.05em;
  --letter-spacing-widest: 0.1em;
  --font-weight-light: 300;
  --font-weight-regular: 400;
  --font-weight-medium: 500;
  --font-weight-semibold: 600;
  --font-weight-bold: 700;
}

:root {
  --spacing-0: 0;
  --spacing-1: 0.25rem;
  --spacing-2: 0.5rem;
  --spacing-3: 0.75rem;
  --spacing-4: 1rem;
  --spacing-5: 1.5rem;
  --spacing-6: 2rem;
  --spacing-8: 3rem;
  --spacing-10: 4rem;
  --spacing-12: 6rem;
  --spacing-16: 8rem;
  --container-padding-sm: var(--spacing-4);
  --container-padding-md: var(--spacing-6);
  --container-padding-lg: var(--spacing-8);
}

:root {
  --breakpoint-xs: 375px;
  --breakpoint-sm: 576px;
  --breakpoint-md: 768px;
  --breakpoint-lg: 992px;
  --breakpoint-xl: 1200px;
  --breakpoint-xxl: 1400px;
}

:root {
  --button-default-padding-y: var(--spacing-2);
  --button-default-padding-x: var(--spacing-4);
  --button-default-border-radius: 0.375rem;
  --button-default-font-weight: medium;
  --button-default-font-size: var(--font-size-base);
  --button-default-transition: all 0.2s ease-in-out;
  --button-sm-padding-y: var(--spacing-1);
  --button-sm-padding-x: var(--spacing-3);
  --button-sm-font-size: var(--font-size-sm);
  --button-lg-padding-y: var(--spacing-3);
  --button-lg-padding-x: var(--spacing-6);
  --button-lg-font-size: var(--font-size-lg);
}